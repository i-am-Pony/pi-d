{\rtf1\ansi\ansicpg1252\cocoartf2709
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red79\green122\blue61;\red255\green255\blue255;\red172\green173\blue193;
\red71\green138\blue206;\red212\green212\blue212;\red167\green197\blue151;\red45\green175\blue118;\red251\green179\blue11;
\red139\green107\blue10;\red18\green112\blue149;\red31\green132\blue63;}
{\*\expandedcolortbl;;\cssrgb\c37570\c54422\c30364;\cssrgb\c100000\c100000\c100000\c0;\cssrgb\c73177\c73580\c80065;
\cssrgb\c34146\c61677\c84338;\cssrgb\c86465\c86464\c86248;\cssrgb\c71035\c80830\c65726;\cssrgb\c19564\c72952\c53639;\cssrgb\c99327\c74858\c1667;
\cssrgb\c61541\c48897\c2468;\cssrgb\c3617\c51559\c65096;\cssrgb\c12791\c57919\c31547;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs24 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 // SPDX-License-Identifier: MIT\cf4 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \strokec5 pragma\cf4 \strokec4  \cf5 \strokec5 solidity\cf4 \strokec4  \cf6 \strokec6 ^\cf7 \strokec7 0.8.17\cf6 \strokec6 ;\cf4 \strokec4 \
\
\cf5 \strokec5 contract\cf4 \strokec4  DigitalID \cf6 \strokec6 \{\cf4 \strokec4 \
    \cf5 \strokec5 struct\cf4 \strokec4  User \cf6 \strokec6 \{\cf4 \strokec4 \
        \cf5 \strokec5 address\cf4 \strokec4  userAddress\cf6 \strokec6 ;\cf4 \strokec4 \
        \cf5 \strokec5 string\cf4 \strokec4  name\cf6 \strokec6 ;\cf4 \strokec4 \
        \cf5 \strokec5 string\cf4 \strokec4  email\cf6 \strokec6 ;\cf4 \strokec4 \
        \cf2 \strokec2 // Add more fields as needed: dateOfBirth, nationality, etc.\cf4 \strokec4 \
        Credential\cf6 \strokec6 []\cf4 \strokec4  credentials\cf6 \strokec6 ;\cf4 \strokec4 \
    \cf6 \strokec6 \}\cf4 \strokec4 \
\
    \cf5 \strokec5 struct\cf4 \strokec4  Credential \cf6 \strokec6 \{\cf4 \strokec4 \
        \cf5 \strokec5 string\cf4 \strokec4  issuer\cf6 \strokec6 ;\cf4 \strokec4 \
        \cf5 \strokec5 string\cf4 \strokec4  credentialType\cf6 \strokec6 ;\cf4 \strokec4 \
        \cf5 \strokec5 string\cf4 \strokec4  certificateHash\cf6 \strokec6 ;\cf4 \strokec4  \cf2 \strokec2 // Hash of the certificate document\cf4 \strokec4 \
    \cf6 \strokec6 \}\cf4 \strokec4 \
\
    \cf5 \strokec5 mapping\cf6 \strokec6 (\cf5 \strokec5 address\cf4 \strokec4  => User\cf6 \strokec6 )\cf4 \strokec4  \cf8 \strokec8 public\cf4 \strokec4  users\cf6 \strokec6 ;\cf4 \strokec4 \
\
    \cf5 \strokec5 event\cf4 \strokec4  UserRegistered\cf6 \strokec6 (\cf5 \strokec5 address\cf4 \strokec4  \cf9 \strokec9 indexed\cf4 \strokec4  userAddress\cf6 \strokec6 );\cf4 \strokec4 \
    \cf5 \strokec5 event\cf4 \strokec4  CredentialIssued\cf6 \strokec6 (\cf5 \strokec5 address\cf4 \strokec4  \cf9 \strokec9 indexed\cf4 \strokec4  userAddress\cf6 \strokec6 ,\cf4 \strokec4  \cf5 \strokec5 string\cf4 \strokec4  credentialType\cf6 \strokec6 );\cf4 \strokec4 \
\
    \cf5 \strokec5 function\cf4 \strokec4  registerUser\cf6 \strokec6 (\cf5 \strokec5 string\cf4 \strokec4  \cf10 \strokec10 memory\cf4 \strokec4  _name\cf6 \strokec6 ,\cf4 \strokec4  \cf5 \strokec5 string\cf4 \strokec4  \cf10 \strokec10 memory\cf4 \strokec4  _email\cf6 \strokec6 )\cf4 \strokec4  \cf8 \strokec8 public\cf4 \strokec4  \cf6 \strokec6 \{\cf4 \strokec4 \
        User \cf10 \strokec10 storage\cf4 \strokec4  user \cf6 \strokec6 =\cf4 \strokec4  users\cf6 \strokec6 [\cf11 \strokec11 msg\cf6 \strokec6 .\cf4 \strokec4 sender\cf6 \strokec6 ];\cf4 \strokec4 \
        user\cf6 \strokec6 .\cf4 \strokec4 userAddress \cf6 \strokec6 =\cf4 \strokec4  \cf11 \strokec11 msg\cf6 \strokec6 .\cf4 \strokec4 sender\cf6 \strokec6 ;\cf4 \strokec4 \
        user\cf6 \strokec6 .\cf4 \strokec4 name \cf6 \strokec6 =\cf4 \strokec4  _name\cf6 \strokec6 ;\cf4 \strokec4 \
        user\cf6 \strokec6 .\cf4 \strokec4 email \cf6 \strokec6 =\cf4 \strokec4  _email\cf6 \strokec6 ;\cf4 \strokec4 \
\
        \cf5 \strokec5 emit\cf4 \strokec4  UserRegistered\cf6 \strokec6 (\cf11 \strokec11 msg\cf6 \strokec6 .\cf4 \strokec4 sender\cf6 \strokec6 );\cf4 \strokec4 \
    \cf6 \strokec6 \}\cf4 \strokec4 \
\
    \cf5 \strokec5 function\cf4 \strokec4  issueCredential\cf6 \strokec6 (\cf5 \strokec5 string\cf4 \strokec4  \cf10 \strokec10 memory\cf4 \strokec4  _issuer\cf6 \strokec6 ,\cf4 \strokec4  \cf5 \strokec5 string\cf4 \strokec4  \cf10 \strokec10 memory\cf4 \strokec4  _credentialType\cf6 \strokec6 ,\cf4 \strokec4  \cf5 \strokec5 string\cf4 \strokec4  \cf10 \strokec10 memory\cf4 \strokec4  _certificateHash\cf6 \strokec6 )\cf4 \strokec4  \cf8 \strokec8 public\cf4 \strokec4  \cf6 \strokec6 \{\cf4 \strokec4 \
        User \cf10 \strokec10 storage\cf4 \strokec4  user \cf6 \strokec6 =\cf4 \strokec4  users\cf6 \strokec6 [\cf11 \strokec11 msg\cf6 \strokec6 .\cf4 \strokec4 sender\cf6 \strokec6 ];\cf4 \strokec4 \
        user\cf6 \strokec6 .\cf4 \strokec4 credentials\cf6 \strokec6 .\cf4 \strokec4 push\cf6 \strokec6 (\cf4 \strokec4 Credential\cf6 \strokec6 (\cf4 \strokec4 _issuer\cf6 \strokec6 ,\cf4 \strokec4  _credentialType\cf6 \strokec6 ,\cf4 \strokec4  _certificateHash\cf6 \strokec6 ));\cf4 \strokec4 \
\
        \cf5 \strokec5 emit\cf4 \strokec4  CredentialIssued\cf6 \strokec6 (\cf11 \strokec11 msg\cf6 \strokec6 .\cf4 \strokec4 sender\cf6 \strokec6 ,\cf4 \strokec4  _credentialType\cf6 \strokec6 );\cf4 \strokec4 \
    \cf6 \strokec6 \}\cf4 \strokec4 \
\
   \cf5 \strokec5 function\cf4 \strokec4  getUserInfo\cf6 \strokec6 (\cf5 \strokec5 address\cf4 \strokec4  _userAddress\cf6 \strokec6 )\cf4 \strokec4  \cf8 \strokec8 public\cf4 \strokec4  \cf8 \strokec8 view\cf4 \strokec4  \cf12 \strokec12 returns\cf4 \strokec4  \cf6 \strokec6 (\cf5 \strokec5 string\cf4 \strokec4  \cf10 \strokec10 memory\cf4 \strokec4  name\cf6 \strokec6 ,\cf4 \strokec4  \cf5 \strokec5 string\cf4 \strokec4  \cf10 \strokec10 memory\cf4 \strokec4  email\cf6 \strokec6 )\cf4 \strokec4  \cf6 \strokec6 \{\cf4 \strokec4 \
    User \cf10 \strokec10 storage\cf4 \strokec4  user \cf6 \strokec6 =\cf4 \strokec4  users\cf6 \strokec6 [\cf4 \strokec4 _userAddress\cf6 \strokec6 ];\cf4 \strokec4 \
    \cf12 \strokec12 return\cf4 \strokec4  \cf6 \strokec6 (\cf4 \strokec4 user\cf6 \strokec6 .\cf4 \strokec4 name\cf6 \strokec6 ,\cf4 \strokec4   user\cf6 \strokec6 .\cf4 \strokec4 email\cf6 \strokec6 );\cf4 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf6 \strokec6 \}\cf4 \strokec4 \
\
    \cf5 \strokec5 function\cf4 \strokec4  getUserCredentials\cf6 \strokec6 (\cf5 \strokec5 address\cf4 \strokec4  _userAddress\cf6 \strokec6 )\cf4 \strokec4  \cf8 \strokec8 public\cf4 \strokec4  \cf8 \strokec8 view\cf4 \strokec4  \cf12 \strokec12 returns\cf4 \strokec4  \cf6 \strokec6 (\cf4 \strokec4 Credential\cf6 \strokec6 []\cf4 \strokec4  \cf10 \strokec10 memory\cf6 \strokec6 )\cf4 \strokec4  \cf6 \strokec6 \{\cf4 \strokec4 \
        User \cf10 \strokec10 storage\cf4 \strokec4  user \cf6 \strokec6 =\cf4 \strokec4  users\cf6 \strokec6 [\cf4 \strokec4 _userAddress\cf6 \strokec6 ];\cf4 \strokec4 \
        \cf12 \strokec12 return\cf4 \strokec4  user\cf6 \strokec6 .\cf4 \strokec4 credentials\cf6 \strokec6 ;\cf4 \strokec4 \
    \cf6 \strokec6 \}\cf4 \strokec4 \
\cf6 \strokec6 \}\cf4 \strokec4 \
}